name: BuildAndTest
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    
permissions:
  checks: write
  pull-requests: write
  
env:
  NuGetDirectory: ${{ github.workspace}}/nuget
  
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
            versionSpec: '5.x'
        
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.
          
      - name: Set up dotnet coverage
        shell: powershell
        run: dotnet tool install --global dotnet-coverage
        
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            
      - name: Determine Version
        id:   gitversion
        uses: gittools/actions/gitversion/execute@v0.10.2
        with:
            additionalArguments: /updateprojectfiles
        
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"rubenmamo_WordpressXmlExportParser" /o:"rubenmamo" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.projectVersion=${{ steps.gitversion.outputs.FullSemVer }}
          dotnet build --no-incremental
          dotnet-coverage collect -f xml -o coverage.xml dotnet test --logger trx
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          
      - name: Pack NuGet Package
        run: |
            cd src\R150.WordPressXmlExportParser
            dotnet pack --configuration Release --output ${{ env.NuGetDirectory }}
            
      - uses: actions/upload-artifact@v3
        with:
            name: nuget
            if-no-files-found: error
            retention-days: 7
            path: ${{ env.NuGetDirectory }}/*.*nupkg
        
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          files: |
            **/*.trx